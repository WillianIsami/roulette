on:
 push:
    branches: [ "main" ]
 pull_request:
    branches: [ "main" ]

permissions:
 contents: read

jobs:
  frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
    - name: Install lintfrontend dependencies, build and run lint
      run: |
        cd frontend
        cp .env.example .env
        npm install
        npm run build
        npm run lint

  server:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: db_name
          POSTGRES_USER: db_user
          POSTGRES_PASSWORD: db_password
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Set up python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: install dependencies
      run: |
        cd server/api
        pip install -r requirements.txt
    - name: Run tests
      env:
        DATABASE_URL: postgres://db_user:db_password@localhost:5432/db_name
      run: |
        cd server/api
        cp .env.example .env
        python manage.py test
